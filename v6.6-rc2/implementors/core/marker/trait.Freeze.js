(function() {var implementors = {
"alloc":[["impl Freeze for <a class=\"struct\" href=\"alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>",1,["alloc::alloc::Global"]],["impl&lt;T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, A&gt; Freeze for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["alloc::boxed::Box"]],["impl Freeze for <a class=\"struct\" href=\"alloc/collections/struct.TryReserveError.html\" title=\"struct alloc::collections::TryReserveError\">TryReserveError</a>",1,["alloc::collections::TryReserveError"]],["impl Freeze for <a class=\"enum\" href=\"alloc/collections/enum.TryReserveErrorKind.html\" title=\"enum alloc::collections::TryReserveErrorKind\">TryReserveErrorKind</a>",1,["alloc::collections::TryReserveErrorKind"]],["impl&lt;'a, T, F, A&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.DrainFilter.html\" title=\"struct alloc::vec::DrainFilter\">DrainFilter</a>&lt;'a, T, F, A&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["alloc::vec::drain_filter::DrainFilter"]],["impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.Drain.html\" title=\"struct alloc::vec::Drain\">Drain</a>&lt;'a, T, A&gt;",1,["alloc::vec::drain::Drain"]],["impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.IntoIter.html\" title=\"struct alloc::vec::IntoIter\">IntoIter</a>&lt;T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["alloc::vec::into_iter::IntoIter"]],["impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["alloc::vec::Vec"]]],
"kernel":[["impl Freeze for <a class=\"struct\" href=\"kernel/error/struct.Error.html\" title=\"struct kernel::error::Error\">Error</a>",1,["kernel::error::Error"]],["impl&lt;I, F, T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, E&gt; Freeze for <a class=\"struct\" href=\"kernel/init/struct.ChainPinInit.html\" title=\"struct kernel::init::ChainPinInit\">ChainPinInit</a>&lt;I, F, T, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    I: Freeze,</span>",1,["kernel::init::ChainPinInit"]],["impl&lt;I, F, T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, E&gt; Freeze for <a class=\"struct\" href=\"kernel/init/struct.ChainInit.html\" title=\"struct kernel::init::ChainInit\">ChainInit</a>&lt;I, F, T, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    I: Freeze,</span>",1,["kernel::init::ChainInit"]],["impl Freeze for <a class=\"enum\" href=\"kernel/str/enum.CStrConvertError.html\" title=\"enum kernel::str::CStrConvertError\">CStrConvertError</a>",1,["kernel::str::CStrConvertError"]],["impl Freeze for <a class=\"struct\" href=\"kernel/str/struct.CStr.html\" title=\"struct kernel::str::CStr\">CStr</a>",1,["kernel::str::CStr"]],["impl Freeze for <a class=\"struct\" href=\"kernel/str/struct.CString.html\" title=\"struct kernel::str::CString\">CString</a>",1,["kernel::str::CString"]],["impl&lt;T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"kernel/sync/struct.Arc.html\" title=\"struct kernel::sync::Arc\">Arc</a>&lt;T&gt;",1,["kernel::sync::arc::Arc"]],["impl&lt;'a, T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"kernel/sync/struct.ArcBorrow.html\" title=\"struct kernel::sync::ArcBorrow\">ArcBorrow</a>&lt;'a, T&gt;",1,["kernel::sync::arc::ArcBorrow"]],["impl&lt;T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"kernel/sync/struct.UniqueArc.html\" title=\"struct kernel::sync::UniqueArc\">UniqueArc</a>&lt;T&gt;",1,["kernel::sync::arc::UniqueArc"]],["impl !Freeze for <a class=\"struct\" href=\"kernel/sync/struct.CondVar.html\" title=\"struct kernel::sync::CondVar\">CondVar</a>",1,["kernel::sync::condvar::CondVar"]],["impl Freeze for <a class=\"struct\" href=\"kernel/sync/lock/mutex/struct.MutexBackend.html\" title=\"struct kernel::sync::lock::mutex::MutexBackend\">MutexBackend</a>",1,["kernel::sync::lock::mutex::MutexBackend"]],["impl Freeze for <a class=\"struct\" href=\"kernel/sync/lock/spinlock/struct.SpinLockBackend.html\" title=\"struct kernel::sync::lock::spinlock::SpinLockBackend\">SpinLockBackend</a>",1,["kernel::sync::lock::spinlock::SpinLockBackend"]],["impl&lt;T, B&gt; !Freeze for <a class=\"struct\" href=\"kernel/sync/lock/struct.Lock.html\" title=\"struct kernel::sync::lock::Lock\">Lock</a>&lt;T, B&gt;",1,["kernel::sync::lock::Lock"]],["impl&lt;'a, T: ?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, B&gt; Freeze for <a class=\"struct\" href=\"kernel/sync/lock/struct.Guard.html\" title=\"struct kernel::sync::lock::Guard\">Guard</a>&lt;'a, T, B&gt;<span class=\"where fmt-newline\">where\n    &lt;B as <a class=\"trait\" href=\"kernel/sync/lock/trait.Backend.html\" title=\"trait kernel::sync::lock::Backend\">Backend</a>&gt;::<a class=\"associatedtype\" href=\"kernel/sync/lock/trait.Backend.html#associatedtype.GuardState\" title=\"type kernel::sync::lock::Backend::GuardState\">GuardState</a>: Freeze,</span>",1,["kernel::sync::lock::Guard"]],["impl&lt;T, U&gt; !Freeze for <a class=\"struct\" href=\"kernel/sync/struct.LockedBy.html\" title=\"struct kernel::sync::LockedBy\">LockedBy</a>&lt;T, U&gt;",1,["kernel::sync::locked_by::LockedBy"]],["impl !Freeze for <a class=\"struct\" href=\"kernel/sync/struct.LockClassKey.html\" title=\"struct kernel::sync::LockClassKey\">LockClassKey</a>",1,["kernel::sync::LockClassKey"]],["impl !Freeze for <a class=\"struct\" href=\"kernel/task/struct.Task.html\" title=\"struct kernel::task::Task\">Task</a>",1,["kernel::task::Task"]],["impl&lt;T, F&gt; Freeze for <a class=\"struct\" href=\"kernel/types/struct.ScopeGuard.html\" title=\"struct kernel::types::ScopeGuard\">ScopeGuard</a>&lt;T, F&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    T: Freeze,</span>",1,["kernel::types::ScopeGuard"]],["impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"kernel/types/struct.Opaque.html\" title=\"struct kernel::types::Opaque\">Opaque</a>&lt;T&gt;",1,["kernel::types::Opaque"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"kernel/types/struct.ARef.html\" title=\"struct kernel::types::ARef\">ARef</a>&lt;T&gt;",1,["kernel::types::ARef"]],["impl&lt;L, R&gt; Freeze for <a class=\"enum\" href=\"kernel/types/enum.Either.html\" title=\"enum kernel::types::Either\">Either</a>&lt;L, R&gt;<span class=\"where fmt-newline\">where\n    L: Freeze,\n    R: Freeze,</span>",1,["kernel::types::Either"]],["impl Freeze for <a class=\"struct\" href=\"kernel/struct.ThisModule.html\" title=\"struct kernel::ThisModule\">ThisModule</a>",1,["kernel::ThisModule"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()